@model QuizViewModel;
@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<div class="container-quiz">
    <form class="radio-form" asp-action="Responder" asp-controller="Quiz">
        <div id="info-box" class="text-quiz-area">
            @Model.PerguntaDescricao
        </div>
        <div asp-validation-summary="All" class="text-red-500 text-xs"></div>
        <input type="hidden" name="page" value="@ViewData["Page"]"/>
        <input type="hidden" name="lang" value="@ViewData["Lang"]"/>
        <input type="hidden" name="nivel" value="@ViewData["Nivel"]"/>
        <input type="hidden" value="@Model.QuizId" asp-for="QuizId"/>
        @if (Model.Alternativas != null)
        {
            @foreach (var alternativa in Model.Alternativas)
            {
                    <label class="radio-button m-bottom">
                        <input type="radio" value="@alternativa.LetrasAlternativa" asp-for="@Model.AlternativaSeleciona" />
                    <span>@alternativa.Description</span>
                    </label>
            }
        }
        @if ((bool)ViewData["Respondida"]!)
        {
            <button type="button" class="buttonEnviarQuiz" onclick="proximaPergunta()" id="submitButton">Próximo</button>
        }
        else
        {
            <button type="submit" class="buttonEnviarQuiz" id="submitButton">Responder</button>
        }
    </form>
</div>
<script>
    const radioButtons = document.querySelectorAll('input[type="radio"]');
    const submitButton = document.getElementById("submitButton");

    document.addEventListener('DOMContentLoaded', () => {
        const url = new URL(window.location.href);
        const acertou = url.searchParams.get("correta");
        const respondida = url.searchParams.get("respondida")
        let acertouBool = false;
        let respondidaBool = false;
        
        if (acertou && respondida) {
            try {
                acertouBool = JSON.parse(acertou.toLowerCase());
                respondidaBool = JSON.parse(respondida.toLowerCase());
                
            } catch (e) {
                acertouBool = false;
            }
        }

        if (acertouBool) {
            submitButton.style.borderColor = "#3bce07";
            submitButton.style.color = "#3bce07";
            submitButton.style.boxShadow = "inset 0 0 7px 1px #3bce07, 0 5px 3.5px 1px #000000";
            submitButton.innerHTML = '<i style="color:green; font-size:30px;" class="bx bx-check"></i> ' + submitButton.textContent.trim();
        } else if(!acertouBool && respondidaBool) {
            submitButton.style.borderColor = "#bb0000";
            submitButton.style.color = "#bb0000";
            submitButton.style.boxShadow = "inset 0 0 7px 1px #bb0000";
            submitButton.innerHTML = '<i style="color:red; font-size:30px;" class="bx bx-x"></i> ' + submitButton.textContent.trim();

        }
    });
    
    function changeButtonColor() {
        submitButton.style.borderColor = "#2e2e2e";
        submitButton.style.color = "#fff";
        submitButton.style.backgroundColor = "#0e0e0e";
        submitButton.style.boxShadow = "0 5px 3.5px 1px #000000";
    }

    radioButtons.forEach((radio) => {
      radio.addEventListener("change", function () {
        if (this.checked) {
          changeButtonColor();
        }
      });
    });

    function proximaPergunta() {
        const url = new URL(window.location.href);
        let page = parseInt(url.searchParams.get("page")) || 1;
        page += 1;
        url.searchParams.set("page", page);
        url.searchParams.set("respondida", false)
        url.searchParams.set("correta",false)
        window.location.href = url.toString();
    }

    /* -- Mudar a cor dos botões -- */
    function corLinguagem() {
        const url = new URL(window.location.href);  // Obtém a URL da página
        const lang = url.searchParams.get("lang"); // Obtém o valor do parâmetro "lang"

        const style = document.createElement('style');  // Cria a tag <style> uma vez

        // Verifica o valor de lang e aplica a regra de estilo correspondente
        if (lang === "javascript") {
            style.textContent = `
                .radio-button span:hover {
                    border-color: #FAFF00;
                    box-shadow: 0px 4px 4px #000000, inset 2px 4px 10px -2px #000000;
                    background-color: #0e0e0e;
                }
            `;
        } else if (lang === "html") {
            style.textContent = `
                .radio-button span:hover {
                    border-color: #ff4d00;
                    box-shadow: 0px 4px 4px #000000, inset 2px 4px 10px -2px #000000;
                    background-color: #0e0e0e;
                }
            `;
        } else if (lang === "css") {
            style.textContent = `
                .radio-button span:hover {
                    border-color: #0038ff;
                    box-shadow: 0px 4px 4px #000000, inset 2px 4px 10px -2px #000000;
                    background-color: #0e0e0e;
                }
            `;
        }

        // Se lang não for nenhum dos valores esperados, pode definir um estilo padrão ou não fazer nada
        document.head.appendChild(style);  // Adiciona a tag <style> ao cabeçalho da página
    }

    corLinguagem();

</script>